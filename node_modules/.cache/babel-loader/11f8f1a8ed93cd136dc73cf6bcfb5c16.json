{"ast":null,"code":"import _objectSpread from\"/Volumes/Workspace/Software-Development/Website-Development/ReactJS/vision-medic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import classNames from\"classnames\";import{Col}from\"shards-react\";import SidebarMainNavbar from\"./SidebarMainNavbar\";import SidebarSearch from\"./SidebarSearch\";import SidebarNavItems from\"./SidebarNavItems\";import{Store}from\"../../../flux\";class MainSidebar extends React.Component{constructor(props){super(props);this.state={menuVisible:false,sidebarNavItems:Store.getSidebarItems()};this.onChange=this.onChange.bind(this);}componentWillMount(){Store.addChangeListener(this.onChange);}componentWillUnmount(){Store.removeChangeListener(this.onChange);}onChange(){this.setState(_objectSpread(_objectSpread({},this.state),{},{menuVisible:Store.getMenuState(),sidebarNavItems:Store.getSidebarItems()}));}render(){var classes=classNames(\"main-sidebar\",\"px-0\",\"col-12\",this.state.menuVisible&&\"open\");return/*#__PURE__*/React.createElement(Col,{tag:\"aside\",className:classes,lg:{size:2},md:{size:3}},/*#__PURE__*/React.createElement(SidebarMainNavbar,{hideLogoText:this.props.hideLogoText}),/*#__PURE__*/React.createElement(SidebarSearch,null),/*#__PURE__*/React.createElement(SidebarNavItems,null));}}MainSidebar.defaultProps={hideLogoText:false};export default MainSidebar;","map":{"version":3,"sources":["/Volumes/Workspace/Software-Development/Website-Development/ReactJS/vision-medic/src/components/layout/MainSidebar/MainSidebar.js"],"names":["React","classNames","Col","SidebarMainNavbar","SidebarSearch","SidebarNavItems","Store","MainSidebar","Component","constructor","props","state","menuVisible","sidebarNavItems","getSidebarItems","onChange","bind","componentWillMount","addChangeListener","componentWillUnmount","removeChangeListener","setState","getMenuState","render","classes","size","hideLogoText","defaultProps"],"mappings":"sMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,GAAT,KAAoB,cAApB,CAEA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,OAASC,KAAT,KAAsB,eAAtB,CAEA,KAAMC,CAAAA,WAAN,QAA0BP,CAAAA,KAAK,CAACQ,SAAU,CACxCC,WAAW,CAACC,KAAD,CAAQ,CACjB,MAAMA,KAAN,EAEA,KAAKC,KAAL,CAAa,CACXC,WAAW,CAAE,KADF,CAEXC,eAAe,CAAEP,KAAK,CAACQ,eAAN,EAFN,CAAb,CAKA,KAAKC,QAAL,CAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB,CACD,CAEDC,kBAAkB,EAAG,CACnBX,KAAK,CAACY,iBAAN,CAAwB,KAAKH,QAA7B,EACD,CAEDI,oBAAoB,EAAG,CACrBb,KAAK,CAACc,oBAAN,CAA2B,KAAKL,QAAhC,EACD,CAEDA,QAAQ,EAAG,CACT,KAAKM,QAAL,gCACK,KAAKV,KADV,MAEEC,WAAW,CAAEN,KAAK,CAACgB,YAAN,EAFf,CAGET,eAAe,CAAEP,KAAK,CAACQ,eAAN,EAHnB,IAKD,CAEDS,MAAM,EAAG,CACP,GAAMC,CAAAA,OAAO,CAAGvB,UAAU,CACxB,cADwB,CAExB,MAFwB,CAGxB,QAHwB,CAIxB,KAAKU,KAAL,CAAWC,WAAX,EAA0B,MAJF,CAA1B,CAOA,mBACE,oBAAC,GAAD,EACE,GAAG,CAAC,OADN,CAEE,SAAS,CAAEY,OAFb,CAGE,EAAE,CAAE,CAAEC,IAAI,CAAE,CAAR,CAHN,CAIE,EAAE,CAAE,CAAEA,IAAI,CAAE,CAAR,CAJN,eAME,oBAAC,iBAAD,EAAmB,YAAY,CAAE,KAAKf,KAAL,CAAWgB,YAA5C,EANF,cAOE,oBAAC,aAAD,MAPF,cAQE,oBAAC,eAAD,MARF,CADF,CAYD,CAhDuC,CA0D1CnB,WAAW,CAACoB,YAAZ,CAA2B,CACzBD,YAAY,CAAE,KADW,CAA3B,CAIA,cAAenB,CAAAA,WAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Col } from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\nimport SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport { Store } from \"../../../flux\";\r\n\r\nclass MainSidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuVisible: false,\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      menuVisible: Store.getMenuState(),\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const classes = classNames(\r\n      \"main-sidebar\",\r\n      \"px-0\",\r\n      \"col-12\",\r\n      this.state.menuVisible && \"open\"\r\n    );\r\n\r\n    return (\r\n      <Col\r\n        tag=\"aside\"\r\n        className={classes}\r\n        lg={{ size: 2 }}\r\n        md={{ size: 3 }}\r\n      >\r\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\r\n        <SidebarSearch />\r\n        <SidebarNavItems />\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n  /**\r\n   * Whether to hide the logo text, or not.\r\n   */\r\n  hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n  hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n"]},"metadata":{},"sourceType":"module"}