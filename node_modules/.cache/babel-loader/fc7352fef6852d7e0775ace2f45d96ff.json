{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nvar _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({\n    actionType,\n    payload\n  }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n\n}\n\nexport default new Store();","map":{"version":3,"sources":["/Volumes/Workspace/Software-Development/Website-Development/ReactJS/vision-medic/src/flux/store.js"],"names":["EventEmitter","Dispatcher","Constants","getSidebarNavItems","_store","menuVisible","navItems","Store","constructor","registerToActions","bind","toggleSidebar","register","actionType","payload","TOGGLE_SIDEBAR","emit","CHANGE","getMenuState","getSidebarItems","addChangeListener","callback","on","removeChangeListener","removeListener"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE,KADF;AAEXC,EAAAA,QAAQ,EAAEH,kBAAkB;AAFjB,CAAb;;AAKA,MAAMI,KAAN,SAAoBP,YAApB,CAAiC;AAC/BQ,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AAEAT,IAAAA,UAAU,CAACW,QAAX,CAAoB,KAAKH,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAApB;AACD;;AAEDD,EAAAA,iBAAiB,CAAC;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,EAA0B;AACzC,YAAQD,UAAR;AACE,WAAKX,SAAS,CAACa,cAAf;AACE,aAAKJ,aAAL;AACA;;AACF;AAJF;AAMD;;AAEDA,EAAAA,aAAa,GAAG;AACdP,IAAAA,MAAM,CAACC,WAAP,GAAqB,CAACD,MAAM,CAACC,WAA7B;AACA,SAAKW,IAAL,CAAUd,SAAS,CAACe,MAApB;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAOd,MAAM,CAACC,WAAd;AACD;;AAEDc,EAAAA,eAAe,GAAG;AAChB,WAAOf,MAAM,CAACE,QAAd;AACD;;AAEDc,EAAAA,iBAAiB,CAACC,QAAD,EAAW;AAC1B,SAAKC,EAAL,CAAQpB,SAAS,CAACe,MAAlB,EAA0BI,QAA1B;AACD;;AAEDE,EAAAA,oBAAoB,CAACF,QAAD,EAAW;AAC7B,SAAKG,cAAL,CAAoBtB,SAAS,CAACe,MAA9B,EAAsCI,QAAtC;AACD;;AAtC8B;;AAyCjC,eAAe,IAAId,KAAJ,EAAf","sourcesContent":["import { EventEmitter } from \"events\";\r\n\r\nimport Dispatcher from \"./dispatcher\";\r\nimport Constants from \"./constants\";\r\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\r\n\r\nlet _store = {\r\n  menuVisible: false,\r\n  navItems: getSidebarNavItems()\r\n};\r\n\r\nclass Store extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n\r\n    this.registerToActions = this.registerToActions.bind(this);\r\n    this.toggleSidebar = this.toggleSidebar.bind(this);\r\n\r\n    Dispatcher.register(this.registerToActions.bind(this));\r\n  }\r\n\r\n  registerToActions({ actionType, payload }) {\r\n    switch (actionType) {\r\n      case Constants.TOGGLE_SIDEBAR:\r\n        this.toggleSidebar();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  toggleSidebar() {\r\n    _store.menuVisible = !_store.menuVisible;\r\n    this.emit(Constants.CHANGE);\r\n  }\r\n\r\n  getMenuState() {\r\n    return _store.menuVisible;\r\n  }\r\n\r\n  getSidebarItems() {\r\n    return _store.navItems;\r\n  }\r\n\r\n  addChangeListener(callback) {\r\n    this.on(Constants.CHANGE, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(Constants.CHANGE, callback);\r\n  }\r\n}\r\n\r\nexport default new Store();\r\n"]},"metadata":{},"sourceType":"module"}